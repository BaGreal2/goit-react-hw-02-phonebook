{"version":3,"sources":["components/Contacts/Contacts.module.css","components/NameForm/NameForm.module.css","App.module.css","components/Filter/Filter.module.css","components/NameForm/NameForm.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NameForm","props","onChangeName","bind","onChangeNumber","onPushContact","e","preventDefault","this","handleGetName","target","value","handleGetNumber","console","log","handlePushContact","name","number","className","styles","container","onSubmit","title","type","onChange","button","Component","Contact","onHandleDelete","parentNode","closest","getAttribute","handleDeleteContact","id","listItem","onClick","Contacts","contacts","filter","contact","toLowerCase","includes","list","map","key","Filter","onFilterChange","handleGetFilter","App","state","uuidv4","setState","delContacts","delContacts2","index","indexOf","splice","alert","prevState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,OAAS,2B,gBCA/FD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,OAAS,2B,iBCAnGD,EAAOC,QAAU,CAAC,MAAQ,qB,kBCA1BD,EAAOC,QAAU,CAAC,UAAY,4B,kMCuCfC,E,kDApCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,eAAe,EAAKA,eAAeD,KAApB,gBACpB,EAAKE,cAAc,EAAKA,cAAcF,KAAnB,gBAJL,E,yDAMLG,GACTA,EAAEC,iBACFC,KAAKP,MAAMQ,cAAcH,EAAEI,OAAOC,S,qCAEvBL,GACXA,EAAEC,iBACFC,KAAKP,MAAMW,gBAAgBN,EAAEI,OAAOC,S,oCAE1BL,GACVA,EAAEC,iBACFM,QAAQC,IAAIR,EAAEI,QACdF,KAAKP,MAAMc,kBAAkBP,KAAKP,MAAMe,KAAMR,KAAKP,MAAMgB,U,+BAGzD,IAAMD,EAAKR,KAAKP,MAAMe,KAChBC,EAAOT,KAAKP,MAAMgB,OACxB,OACI,yBAAKC,UAAWC,IAAOC,WACnB,0BAAMC,SAAUb,KAAKH,eACjB,wBAAIa,UAAWC,IAAOG,OAAtB,QACA,2BAAON,KAAK,OAAOO,KAAK,OAAOZ,MAAOK,EAAMQ,SAAUhB,KAAKN,eAC3D,wBAAIgB,UAAWC,IAAOG,OAAtB,UACA,2BAAON,KAAK,SAASO,KAAK,OAAOZ,MAAOM,EAAQO,SAAUhB,KAAKJ,iBAAwB,6BACvF,4BAAQc,UAAWC,IAAOM,OAAQF,KAAK,UAAvC,qB,GA9BGG,a,gBCmBRC,E,kDAlBX,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACD2B,eAAe,EAAKA,eAAezB,KAApB,gBAFN,E,2DAIHG,GACXA,EAAEC,iBACFM,QAAQC,IAAIR,EAAEI,OAAOmB,WAAWC,QAAQ,MAAMC,aAAa,OAC3DvB,KAAKP,MAAM+B,oBAAoB1B,EAAEI,OAAOmB,WAAWC,QAAQ,MAAMC,aAAa,S,+BAGlF,OACI,wBAAIE,GAAIzB,KAAKP,MAAMgC,GAAIf,UAAWC,IAAOe,UACrC,2BAAI1B,KAAKP,MAAMe,KAAf,KAAuBR,KAAKP,MAAMgB,QADtC,IACkD,4BAAQkB,QAAS3B,KAAKoB,eAAgBV,UAAWC,IAAOM,QAAxD,e,GAbpCC,aCuBPU,E,uKApBF,IAAD,OACEC,EAAW7B,KAAKP,MAAMoC,SAASC,QAAO,SAAAC,GAAO,OAAEA,EAAQvB,KAAKwB,cAAcC,SAAS,EAAKxC,MAAMqC,WACpG,OACI,6BACI,wBAAIpB,UAAWC,IAAOuB,MACjBL,EAASM,KAAI,SAAAJ,GAAO,OACjB,kBAAC,EAAD,CACAvB,KAAMuB,EAAQvB,KACdC,OAAQsB,EAAQtB,OAChBgB,GAAIM,EAAQN,GACZW,IAAKL,EAAQN,GACbD,oBAAqB,EAAK/B,MAAM+B,+B,GAbjCN,a,yBCmBRmB,E,kDAnBX,WAAY5C,GAAO,IAAD,8BACd,cAAMA,IACD6C,eAAe,EAAKA,eAAe3C,KAApB,gBAFN,E,2DAIHG,GACXA,EAAEC,iBACFC,KAAKP,MAAM8C,gBAAgBzC,EAAEI,OAAOC,S,+BAGpC,IAAM2B,EAAO9B,KAAKP,MAAMqC,OACxB,OACI,yBAAKpB,UAAWC,IAAOC,WACnB,qDACA,2BAAOG,KAAK,OAAOZ,MAAO2B,EAAQd,SAAUhB,KAAKsC,sB,GAd5CpB,a,gBC6FNsB,E,kDAxFb,WAAY/C,GAAO,IAAD,8BAChB,cAAMA,IACDQ,cAAgB,EAAKA,cAAcN,KAAnB,gBACrB,EAAKS,gBAAkB,EAAKA,gBAAgBT,KAArB,gBACvB,EAAK4C,gBAAkB,EAAKA,gBAAgB5C,KAArB,gBACvB,EAAKY,kBAAoB,EAAKA,kBAAkBZ,KAAvB,gBACzB,EAAK6B,oBAAsB,EAAKA,oBAAoB7B,KAAzB,gBAC3B,EAAK8C,MAAQ,CACXZ,SAAU,CACR,CACErB,KAAM,gBACNC,OAAQ,YACRgB,GAAIiB,eAEN,CACElC,KAAM,iBACNC,OAAQ,YACRgB,GAAIiB,eAEN,CACElC,KAAM,gBACNC,OAAQ,YACRgB,GAAIiB,gBAGRZ,OAAQ,GACRtB,KAAM,GACNC,OAAQ,IA3BM,E,0DA8BJD,GACZR,KAAK2C,SAAS,CACZnC,KAAMA,M,sCAGMC,GACdT,KAAK2C,SAAS,CACZlC,OAAQA,M,sCAGIqB,GACd9B,KAAK2C,SAAS,CACZb,OAAQA,EAAOE,kB,0CAGCP,GAClB,IAAImB,EAAc5C,KAAKyC,MAAMZ,SAASM,KAAI,SAAAJ,GAAO,OAAEA,EAAQN,MACvDoB,EAAY,YAAO7C,KAAKyC,MAAMZ,UAC9BiB,EAAQF,EAAYG,QAAQtB,GAChCoB,EAAaG,OAAOF,EAAO,GAC3B9C,KAAK2C,SAAS,CACZd,SAAS,YAAKgB,O,wCAGArC,EAAMC,GACRT,KAAKyC,MAAMZ,SAASM,KAAI,SAAAJ,GAAO,OAAEA,EAAQvB,QAC3CyB,SAASzB,GAKrByC,MAAM,GAAD,OAAIzC,EAAJ,6BAJLR,KAAK2C,UAAS,SAAAO,GAAS,MAAG,CACxBrB,SAAS,GAAD,mBAAMqB,EAAUrB,UAAhB,CAA0B,CAACrB,KAAMA,EAAMC,OAAQA,EAAQgB,GAAIiB,uB,+BAOvE,OACE,yBAAKhC,UAAU,OACb,wBAAIA,UAAWC,IAAOG,OAAtB,aACA,kBAAC,EAAD,CACAN,KAAMR,KAAKyC,MAAMjC,KACjBC,OAAQT,KAAKyC,MAAMhC,OACnBR,cAAeD,KAAKC,cACpBG,gBAAiBJ,KAAKI,gBACtBG,kBAAmBP,KAAKO,oBACxB,wBAAIG,UAAWC,IAAOG,OAAtB,YACA,kBAAC,EAAD,CACAgB,OAAQ9B,KAAKyC,MAAMX,OACnBS,gBAAiBvC,KAAKuC,kBACtB,kBAAC,EAAD,CACAV,SAAU7B,KAAKyC,MAAMZ,SACrBC,OAAQ9B,KAAKyC,MAAMX,OACnBN,oBAAqBxB,KAAKwB,2B,GAlFdN,aCKEiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/D,QAAQ+D,MAAMA,EAAMC,c","file":"static/js/main.99d07c0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2ALTo\",\"listItem\":\"Contacts_listItem__Bo3T2\",\"button\":\"Contacts_button__1rqxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NameForm_container__Cvt-z\",\"title\":\"NameForm_title__2u4B2\",\"button\":\"NameForm_button__2lBFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__6eRQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__15YJS\"};","import React, {Component} from 'react';\r\nimport styles from './NameForm.module.css';\r\n\r\nclass NameForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.onChangeName=this.onChangeName.bind(this)\r\n        this.onChangeNumber=this.onChangeNumber.bind(this)\r\n        this.onPushContact=this.onPushContact.bind(this)\r\n    }\r\n    onChangeName(e){\r\n        e.preventDefault()\r\n        this.props.handleGetName(e.target.value)\r\n    }\r\n    onChangeNumber(e){\r\n        e.preventDefault()\r\n        this.props.handleGetNumber(e.target.value)\r\n    }\r\n    onPushContact(e){\r\n        e.preventDefault()\r\n        console.log(e.target)\r\n        this.props.handlePushContact(this.props.name, this.props.number)\r\n    }\r\n    render(){\r\n        const name=this.props.name\r\n        const number=this.props.number\r\n        return(\r\n            <div className={styles.container}>\r\n                <form onSubmit={this.onPushContact}>\r\n                    <h3 className={styles.title}>Name</h3>\r\n                    <input name=\"name\" type=\"text\" value={name} onChange={this.onChangeName}></input>\r\n                    <h3 className={styles.title}>Number</h3>\r\n                    <input name=\"number\" type=\"text\" value={number} onChange={this.onChangeNumber}></input><br></br>\r\n                    <button className={styles.button} type=\"submit\">Add contact</button>\r\n                </form>\r\n            </div>        \r\n            )\r\n    }\r\n}\r\n\r\nexport default NameForm;","import React, {Component} from 'react';\r\nimport styles from './Contacts.module.css'\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.onHandleDelete=this.onHandleDelete.bind(this)\r\n    }\r\n    onHandleDelete(e){\r\n        e.preventDefault()\r\n        console.log(e.target.parentNode.closest('li').getAttribute(\"id\"))\r\n        this.props.handleDeleteContact(e.target.parentNode.closest('li').getAttribute(\"id\"))\r\n    }\r\n    render(){\r\n    return(\r\n        <li id={this.props.id} className={styles.listItem}>\r\n            <p>{this.props.name}: {this.props.number}</p> <button onClick={this.onHandleDelete} className={styles.button}>Delete</button>\r\n        </li>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact';\r\nimport styles from './Contacts.module.css';\r\n\r\nclass Contacts extends Component{\r\n    \r\n    render(){\r\n        const contacts = this.props.contacts.filter(contact=>contact.name.toLowerCase().includes(this.props.filter));\r\n        return(\r\n            <div>\r\n                <ul className={styles.list}>\r\n                    {contacts.map(contact=>(\r\n                        <Contact \r\n                        name={contact.name}\r\n                        number={contact.number}\r\n                        id={contact.id}\r\n                        key={contact.id}\r\n                        handleDeleteContact={this.props.handleDeleteContact}\r\n                         />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React, {Component} from 'react';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.onFilterChange=this.onFilterChange.bind(this)\r\n    }\r\n    onFilterChange(e){\r\n        e.preventDefault()\r\n        this.props.handleGetFilter(e.target.value)\r\n    }\r\n    render(){\r\n        const filter=this.props.filter;\r\n        return(\r\n            <div className={styles.container}>\r\n                <h3>Find contacts by name</h3>\r\n                <input type=\"text\" value={filter} onChange={this.onFilterChange}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","import React, {Component} from 'react';\nimport NameForm from './components/NameForm/NameForm'\nimport Contacts from './components/Contacts/Contacts'\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.handleGetName = this.handleGetName.bind(this)\n    this.handleGetNumber = this.handleGetNumber.bind(this)\n    this.handleGetFilter = this.handleGetFilter.bind(this)\n    this.handlePushContact = this.handlePushContact.bind(this)\n    this.handleDeleteContact = this.handleDeleteContact.bind(this)\n    this.state = {\n      contacts: [\n        {\n          name: \"Roise Simpson\",\n          number: \"645-17-49\",\n          id: uuidv4(),\n        },\n        {\n          name: \"Hermione Kline\",\n          number: \"443-89-12\",\n          id: uuidv4(),\n        },\n        {\n          name: \"Eden Clements\",\n          number: \"459-12-56\",\n          id: uuidv4(),\n        }\n      ],\n      filter: '',\n      name: '',\n      number: '',\n    }\n  }\n  handleGetName(name){\n    this.setState({\n      name: name,\n    })\n  }\n  handleGetNumber(number){\n    this.setState({\n      number: number,\n    })\n  }\n  handleGetFilter(filter){\n    this.setState({\n      filter: filter.toLowerCase(),\n    })\n  }\n  handleDeleteContact(id){\n    let delContacts = this.state.contacts.map(contact=>contact.id)\n    let delContacts2 = [...this.state.contacts]\n    let index = delContacts.indexOf(id)\n    delContacts2.splice(index, 1);\n    this.setState({\n      contacts: [...delContacts2]\n    })\n  }\n  handlePushContact(name, number){\n    let thisArr = this.state.contacts.map(contact=>contact.name)\n    if(!thisArr.includes(name)){\n    this.setState(prevState=>({\n      contacts: [...prevState.contacts, {name: name, number: number, id: uuidv4(),}]\n    }))\n  } else{\n    alert(`${name} is already in contacts.`)\n  }\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <h2 className={styles.title}>Phonebook</h2>\n      <NameForm\n      name={this.state.name}\n      number={this.state.number}\n      handleGetName={this.handleGetName}\n      handleGetNumber={this.handleGetNumber}\n      handlePushContact={this.handlePushContact}/>\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter\n      filter={this.state.filter}\n      handleGetFilter={this.handleGetFilter}/>\n      <Contacts\n      contacts={this.state.contacts}\n      filter={this.state.filter}\n      handleDeleteContact={this.handleDeleteContact}\n      />\n    </div>\n  );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}